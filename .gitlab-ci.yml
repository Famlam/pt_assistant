image: registry.gitlab.com/josm/docker-library/openjdk-8-josmplugin:latest

include:
    - template: Dependency-Scanning.gitlab-ci.yml
    - template: Security/License-Scanning.gitlab-ci.yml

stages:
    - build
    - test
    - deploy
    - release

###############
# Build stage #
###############

assemble:
    stage: build
    script:
        - ./gradlew assemble --stacktrace
    artifacts:
        paths:
            - build/
    except:
        - schedules

java 11 assemble:
    stage: build
    image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
    script:
        - ./gradlew assemble --stacktrace
    artifacts:
        paths:
            - build/
    except:
        - schedules

java 12 assemble:
    stage: build
    image: registry.gitlab.com/josm/docker-library/openjdk-12-josmplugin:latest
    script:
        - ./gradlew assemble --stacktrace
    artifacts:
        paths:
            - build/
    allow_failure: true
    except:
        - schedules

java 13 assemble:
    stage: build
    image: registry.gitlab.com/josm/docker-library/openjdk-13-josmplugin:latest
    script:
        - ./gradlew assemble --stacktrace
    artifacts:
        paths:
            - build/
    allow_failure: true
    except:
        - schedules


##############
# Test stage #
##############

build:
    stage: test
    script:
        - ./gradlew build generatePot --stacktrace
    artifacts:
        paths:
            - build
    dependencies:
        - assemble
    except:
        - schedules

min JOSM compile:
    stage: test
    script:
        - ./gradlew compileJava_minJosm --stacktrace
    dependencies:
        - assemble
    except:
        - schedules

latest JOSM compile:
    stage: test
    script:
        - ./gradlew compileJava_latestJosm --stacktrace
    dependencies:
        - assemble
    only:
        - schedules@JOSM/plugin/pt_assistant

java 11 build:
    stage: test
    image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
    script:
        - ./gradlew build --stacktrace
    dependencies:
        - java 11 assemble
    except:
        - schedules

java 12 build:
    stage: test
    image: registry.gitlab.com/josm/docker-library/openjdk-12-josmplugin:latest
    script:
        - ./gradlew build --stacktrace
    dependencies:
        - java 12 assemble
    allow_failure: true
    except:
        - schedules

java 13 build:
    stage: test
    image: registry.gitlab.com/josm/docker-library/openjdk-13-josmplugin:latest
    script:
        - ./gradlew build --stacktrace
    dependencies:
        - java 13 assemble
    allow_failure: true
    except:
        - schedules


################
# Deploy stage #
################

transifex.com:
    image: registry.gitlab.com/josm/docker-library/python-transifex:latest
    stage: deploy
    environment:
        name: transifex.com
        url: https://www.transifex.com/josm/josm/josm-plugin_pt_assistant/
    script:
        - TX_TOKEN="$TRANSIFEX_TOKEN" tx push -s --no-interactive
    dependencies:
        - build
    only:
      - master@JOSM/plugin/pt_assistant
    except:
        - schedules

GitLab Maven repo:
    stage: deploy
    environment:
        name: GitLab.com / Maven packages
        url: https://gitlab.com/JOSM/plugin/pt_assistant/-/packages
    script:
        - ./gradlew publishAllPublicationsToGitlabRepository
    dependencies:
        - build
    only:
        - tags@JOSM/plugin/pt_assistant
    except:
        - schedules

push pages branch:
    stage: deploy
    environment:
        name: GitLab.com / pages branch
        url: https://gitlab.com/JOSM/plugin/pt_assistant/tree/pages/dist
    script:
        - |
            base64 --decode "$SSH_PRIVATE_DEPLOY_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            git clone --depth 1 --branch pages git@gitlab.com:JOSM/plugin/pt_assistant.git pages
        - |
            version=`git describe --always --dirty`
            longVersion=`git describe --always --long --dirty`
            commitMessage="Release version $longVersion"
        - |
            mkdir -pv "pages/dist/$version"
            cp -v build/dist/* build/tmp/jar/MANIFEST.MF "pages/dist/$version"
            rm -fv "pages/dist/latest"
            ln -s "./$version" "pages/dist/latest"
        - |
            cd pages/
            git config user.name "GitLab CI for JOSM/plugin/pt_assistant"
            git config user.email "deploy@gitlab.com"
            git stage .
            git commit -a -m "$commitMessage"
            git push origin pages
    dependencies:
        - build
    only:
        - tags@JOSM/plugin/pt_assistant
    except:
        - schedules


#################
# Release stage #
#################

release to Gitlab.com:
    stage: release
    environment:
        name: GitLab.com / Releases
        url: https://gitlab.com/JOSM/plugin/pt_assistant/-/releases
    script:
        - ./gradlew releaseToGitlab
    dependencies:
        - GitLab Maven repo
    only:
        - tags@JOSM/plugin/pt_assistant
    except:
        - schedules
